<UserControl x:Class="BookstoreEf.View.StoreInventoryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BookstoreEf.View"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="MintCream">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="7*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--STORES-->
        <Label Content="Stores" 
               FontSize="16" 
               FontWeight="Bold"
               Grid.Column="0" 
               Grid.Row="0"               
               HorizontalAlignment="Left" 
               VerticalAlignment="Bottom"
               Margin="10 0 0 0">
        </Label>

        <ListBox Grid.Column="0" 
                 Grid.Row="1"
                 ItemsSource="{Binding StoreInventoryViewModel.Stores}" 
                 Margin="10 0 10 0"
                 SelectedItem="{Binding StoreInventoryViewModel.SelectedStore, UpdateSourceTrigger=PropertyChanged}" >

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="{Binding StoreName}" 
                                   FontWeight="Bold"
                                   FontSize="12"
                                   Margin="0 5 0 0"/>

                        <TextBlock Text="{Binding StoreAdress}"                                   
                                   FontWeight="Regular"
                                   FontSize="11"
                                   TextWrapping="Wrap"
                                   Margin="0 5 0 0"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Button Background="Transparent" 
                BorderBrush="Transparent"
                Command ="{Binding AuthorViewModel.SwitchToAuthorViewCommand}"
                Grid.Column="0" 
                Grid.Row="0"
                Height="30" 
                Width="30"
                HorizontalAlignment="Right" 
                VerticalAlignment="Bottom"
                Margin="0 0 40 0"
                ToolTip="Go to author information">

            <Button.Content>
                <fa:IconBlock Icon="UserPen"/>
            </Button.Content>
        </Button>

        <Button Background="Transparent" 
                BorderBrush="Transparent"
                Command ="{Binding BookViewModel.SwitchToBookViewCommand}"
                Grid.Column="0" 
                Grid.Row="0"
                Height="30" 
                Width="30"
                HorizontalAlignment="Right" 
                VerticalAlignment="Bottom"
                Margin="0 0 10 0"
                ToolTip="Go to book information">

            <Button.Content>
                <fa:IconBlock Icon="Book"/>
            </Button.Content>
        </Button>


        <!--BOOK(S) IN STORE-->
        <Label Content="Book(s) in selected store" 
               FontSize="16" 
               FontStyle="Oblique" 
               FontWeight="Regular"
               Grid.Column="1" 
               Grid.Row="0"  
               HorizontalAlignment="Left" 
               VerticalAlignment="Bottom"
               Margin="10 0 0 0">
        </Label>


        <Button Background="Transparent" 
                BorderBrush="Transparent"
                Command ="{Binding StoreInventoryViewModel.OpenAddBooktitleToStoreCommand}"
                Grid.Column="1" 
                Grid.Row="0"
                Height="30" 
                Width="30"
                HorizontalAlignment="Right" 
                VerticalAlignment="Bottom"
                Margin="0 0 70 0"
                ToolTip="Add new book to store">

            <Button.Content>
                <fa:IconBlock Icon="Plus"/>
            </Button.Content>
        </Button>

        <Button Background="Transparent" 
                BorderBrush="Transparent"
                Command ="{Binding StoreInventoryViewModel.DeleteBookCommand}"
                IsEnabled="{Binding StoreInventoryViewModel.IsDeleteBookOptionEnable, UpdateSourceTrigger=PropertyChanged}"
                Grid.Column="1" 
                Grid.Row="0"
                Height="30" 
                Width="30"
                HorizontalAlignment="Right" 
                VerticalAlignment="Bottom"
                Margin="0 0 40 0"
                ToolTip="Remove selected book from store">

            <Button.Content>
                <fa:IconBlock Icon="Minus"/>
            </Button.Content>
        </Button>
        
        <Button Background="Transparent"
                BorderBrush="Transparent"
                Command ="{Binding StoreInventoryViewModel.OpenManageInventoryCommand}"               
                Grid.Column="1" 
                Grid.Row="0"
                Height="30" 
                IsEnabled="{Binding StoreInventoryViewModel.IsUpdateBookQuantityEnable}"
                Width="30"
                HorizontalAlignment="Right" 
                VerticalAlignment="Bottom"
                Margin="0 0 10 0"
                ToolTip="Update selected book quantity in store">

            <Button.Content>
                <fa:IconBlock Icon="Shop"/>
            </Button.Content>
        </Button>

        <DataGrid x:Name="DG_BookDetails" 
                  Grid.Column="1" Grid.Row="1"
                  Margin="10 0 10 0"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserReorderColumns="False"
                  CanUserResizeColumns="False"
                  IsReadOnly ="True"
                  AlternationCount="2"
                  AlternatingRowBackground="LightGray"
                  RowBackground="White"
                  RowHeaderWidth="20"
                  SelectedItem="{Binding StoreInventoryViewModel.SelectedBookTitle, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                  ItemsSource="{Binding StoreInventoryViewModel.BooksInSelectedStore, UpdateSourceTrigger=PropertyChanged}">

            <DataGrid.Columns>
                <DataGridTextColumn Header="Book Title"
                                    Width="2*"
                                    Binding="{Binding BookTitle}"/>
                <DataGridTextColumn Header="Quantity"
                                    Width="*"
                                    Binding="{Binding Quantity}"/>
                <DataGridTextColumn Header="Price per unit"
                                    Width="*"
                                    Binding="{Binding Price}"/>
                <DataGridTextColumn Header="Total price"
                                    Width="*"
                                    Binding="{Binding TotalPrice}"/>
            </DataGrid.Columns>
        </DataGrid>

        <!--TOTAL INVENTORY VALUE-->
        <Grid Grid.Column="1" Grid.Row="2"
              Margin="10 0 10 10">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Label Content="Total Inventory Value:"
                   Grid.Column="0"
                   FontWeight="Bold" 
                   FontSize="13"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Center">
            </Label>

            <Label Content="{Binding StoreInventoryViewModel.TotalInventoryValue, UpdateSourceTrigger=PropertyChanged}"
                   Grid.Column="1"
                   FontWeight="Regular" 
                   FontSize="13"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center">
            </Label>
     
        </Grid>

    </Grid>

</UserControl>

